import java.util.Queue;
import java.util.LinkedList;
import java.util.Scanner;

class Aluno {
  public int matricula;
  public String nome;

  public Aluno(int matricula, String nome) {
    this.matricula = matricula;
    this.nome = nome;
  }

  @Override
  public String toString() {
    return "Aluno [matricula: " + matricula + ", nome: " + nome + "]";
  }
}

public class Main {
  public static void main(String[] args) {
    Queue<Aluno> filaAlunos = new LinkedList<Aluno>();
    Scanner teclado = new Scanner(System.in);

    filaAlunos.add(new Aluno(1, "Saccol"));
    filaAlunos.add(new Aluno(2, "Pinheiro"));
    filaAlunos.add(new Aluno(3, "Iago"));

    int matricula;  
    String nome;
    for (int i = 0; i < 2; i++) {
      System.out.println("Matricula:");
      matricula = teclado.nextInt();
      System.out.println("Nome:");
      teclado.nextLine(); // Consumir a quebra de linha
      nome = teclado.nextLine();

      System.out.println("Exibindo fila:");
      System.out.println(filaAlunos);

      System.out.println("Exibindo inicio ou cabeÃ§a/head da fila:");
      System.out.println(filaAlunos.peek());

      System.out.println("Exibindo se fila esta ou nao vazia:");
      System.out.println(filaAlunos.isEmpty());

      System.out.println("Exibindo o tamanho da fila:");
      System.out.println(filaAlunos.size());
 
      System.out.println("Verificando se 2, Iago' esta na fila:");
      Aluno a = new Aluno(2, "Iago");
      System.out.println(filaAlunos.contains(a));

      while (!filaAlunos.isEmpty()) {
        System.out.println(filaAlunos.poll());
        try {
          Thread.sleep(3000);
        } catch (Exception e) {
          System.out.println(e.getMessage());
        }
      }
    }
    teclado.close();
  }
}
